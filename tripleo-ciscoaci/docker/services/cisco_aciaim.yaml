heat_template_version: queens

description: >
  OpenStack containerized Cisco ACI AIM service

parameters:
  DockerCiscoAciAimImage:
    description: image
    type: string
  EndpointMap:
    default: {}
    description: Mapping of service endpoint -> protocol. Typically set
                 via parameter_defaults in the resource registry.
    type: json
  ServiceData:
    default: {}
    description: Dictionary packing service data
    type: json
  ServiceNetMap:
    default: {}
    description: Mapping of service_name -> network name. Typically set
                 via parameter_defaults in the resource registry.  This
                 mapping overrides those in ServiceNetMapDefaults.
    type: json
  DefaultPasswords:
    default: {}
    type: json
  RoleName:
    default: ''
    description: Role name on which the service is applied
    type: string
  RoleParameters:
    default: {}
    description: Parameters specific to the role
    type: json
  UpgradeRemoveUnusedPackages:
    default: false
    description: Remove package if the service is being disabled during upgrade
    type: boolean
  NeutronApiOptVolumes:
    default: []
    description: list of optional volumes to be mounted
    type: comma_delimited_list
  NeutronApiOptEnvVars:
    default: []
    description: list of optional environment variables
    type: comma_delimited_list

resources:

  ContainersCommon:
    type: /usr/share/openstack-tripleo-heat-templates/docker/services/containers-common.yaml

  MySQLClient:
    type: /usr/share/openstack-tripleo-heat-templates/puppet/services/database/mysql-client.yaml

  CiscoAciAim:
    type: /opt/ciscoaci-tripleo-heat-templates/puppet/services/ciscoaci-aim.yaml
    properties:
      EndpointMap: {get_param: EndpointMap}
      ServiceData: {get_param: ServiceData}
      ServiceNetMap: {get_param: ServiceNetMap}
      DefaultPasswords: {get_param: DefaultPasswords}
      RoleName: {get_param: RoleName}
      RoleParameters: {get_param: RoleParameters}

outputs:
  role_data:
    description: Role data for the Aci AIM role.
    value:
      service_name: {get_attr: [CiscoAciAim, role_data, service_name]}
      logging_source: {get_attr: [CiscoAciAim, role_data, logging_source]}
      logging_groups: {get_attr: [CiscoAciAim, role_data, logging_groups]}
      config_settings:
        map_merge:
          - get_attr: [CiscoAciAim, role_data, config_settings]
      service_config_settings: {get_attr: [CiscoAciAim, role_data, service_config_settings]}
      # BEGIN DOCKER SETTINGS
      puppet_config:
        config_volume: aim
        puppet_tags: aim_conf,aimctl_config
        step_config:
          list_join:
            - "\n"
            - - {get_attr: [CiscoAciAim, role_data, step_config]}
              - {get_attr: [MySQLClient, role_data, step_config]}
        config_image: {get_param: DockerCiscoAciAimImage}
      kolla_config:
        /var/lib/kolla/config_files/ciscoaci_aim.json:
          command:
            list_join:
            - ' '
            - - /bin/supervisord -c /etc/aim/aim_supervisord.conf
          config_files:
            - source: "/var/lib/kolla/config_files/src/*"
              dest: "/"
              merge: true
              preserve_properties: true
          permissions:
            - path: /var/log/aim
              owner: root:root
              recurse: true
      docker_config_scripts: {get_attr: [ContainersCommon, docker_config_scripts]}
      docker_config:
        step_2: 
          create_aim_config:
            start_order: 1
            detach: false
            net: host
            pid: host
            user: root
            command: # '/docker_puppet_apply.sh "STEP" "TAGS" "CONFIG" "DEBUG"'
              list_concat:
                -
                  - '/docker_puppet_apply.sh'
                  - '4'
                  - 'file,aim_conf,aimctl_config'
                  - 'include ::tripleo::profile::base::ciscoaci_aim'
            image: {get_param: DockerCiscoAciAimImage}
            volumes:
              list_concat:
                - {get_attr: [ContainersCommon, docker_puppet_apply_volumes]}
        step_3:
          aim_db_migrate:
            image: &ciscoaci_aim_image {get_param: DockerCiscoAciAimImage}
            net: host
            privileged: false
            detach: false
            user: root
            volumes:
              list_concat:
                - {get_attr: [ContainersCommon, volumes]}
                -
                  - /var/lib/config-data/neutron/etc/my.cnf.d/tripleo.cnf:/etc/my.cnf.d/tripleo.cnf:ro
                  - /var/lib/config-data/aim/etc/aim:/etc/aim:ro
                  - /var/lib/config-data/neutron/etc/neutron:/etc/neutron:ro
            command: ['/usr/bin/bootstrap_host_exec', 'neutron_plugin_ciscoaci', 
                      '/bin/gbp-db-manage', '--config-file', '/etc/neutron/neutron.conf', 'upgrade', 'head', '&&',
                      '/usr/bin/aimctl', 'db-migration', 'upgrade', 'head', '&&', 
                      '/usr/bin/aimctl', 'config', 'update', '&&', 
                      '/usr/bin/aimctl', 'infra', 'create', '&&', 
                      '/usr/bin/aimctl', 'manager', 'load-domains']
        step_4:
          ciscoaci_aim:
            start_order: 11
            image: {get_param: DockerCiscoAciAimImage}
            net: host
            pid: host
            privileged: true
            restart: always
            healthcheck:
              test: /etc/aim/aim_healthcheck
            volumes:
              list_concat:
                - {get_attr: [ContainersCommon, volumes]}
                -
                  - /var/lib/kolla/config_files/ciscoaci_aim.json:/var/lib/kolla/config_files/config.json:ro
                  - /var/lib/config-data/puppet-generated/aim/:/var/lib/kolla/config_files/src:ro
                  - /lib/modules:/lib/modules:ro
                  - /var/lib/neutron:/var/lib/neutron
                  - /var/lib/openstack:/var/lib/openstack
                  - /var/log/containers/aim:/var/log/aim
            environment:
              - KOLLA_CONFIG_STRATEGY=COPY_ALWAYS
        step_5:
          ciscoaci_physnet_map:
            start_order: 1
            image: {get_param: DockerCiscoAciAimImage}
            net: host
            privileged: false
            detach: false
            user: root
            volumes:
              list_concat:
                - {get_attr: [ContainersCommon, volumes]}
                -
                  - /var/lib/config-data/neutron/etc/my.cnf.d/tripleo.cnf:/etc/my.cnf.d/tripleo.cnf:ro
                  - /var/lib/config-data/aim/etc/aim:/etc/aim:ro
                  - /var/lib/config-data/neutron/etc/neutron:/etc/neutron:ro
                  - /var/lib/config-data/neutron/usr/share/neutron:/usr/share/neutron:ro
            command: ['/usr/bin/bootstrap_host_exec','neutron_plugin_ciscoaci', '/etc/aim/physnet_mapping.sh']
      host_prep_tasks: 
        - name: create persistent logs directory for cisco aci aim
          file:
            path: /var/log/containers/aim
            state: directory
      upgrade_tasks:
        - name: Check if aim-aid is deployed
          command: systemctl is-enabled --quiet aim-aid
          tags: common
          ignore_errors: True
          register: aim_aid_enabled
        - name: "PreUpgrade step0,validation: Check service aim-aid is running"
          command: systemctl is-active --quiet aim-aid
          when:
            - step|int == 0
            - aim_aid_enabled.rc == 0
          tags: validation
        - name: Stop and disable aim-aid service
          when:
            - step|int == 2
            - aim_aid_enabled.rc == 0
          service: name=aim-aid state=stopped enabled=no

        - name: Check if aim-event-service-polling is deployed
          command: systemctl is-enabled --quiet aim-event-service-polling
          tags: common
          ignore_errors: True
          register: aim_event_service_polling_enabled
        - name: "PreUpgrade step0,validation: Check service aim-event-service-polling is running"
          command: systemctl is-active --quiet aim-event-service-polling
          when:
            - step|int == 0
            - aim_event_service_polling_enabled.rc == 0
          tags: validation
        - name: Stop and disable aim-event-service-polling service
          when:
            - step|int == 2
            - aim_event_service_polling_enabled.rc == 0
          service: name=aim-event-service-polling state=stopped enabled=no

        - name: Check if aim-event-service-rpc is deployed
          command: systemctl is-enabled --quiet aim-event-service-rpc
          tags: common
          ignore_errors: True
          register: aim_event_service_rpc_enabled
        - name: "PreUpgrade step0,validation: Check service aim-event-service-rpc is running"
          command: systemctl is-active --quiet aim-event-service-rpc
          when:
            - step|int == 0
            - aim_event_service_rpc_enabled.rc == 0
          tags: validation
        - name: Stop and disable aim-event-service-rpc service
          when:
            - step|int == 2
            - aim_event_service_rpc_enabled.rc == 0
          service: name=aim-event-service-rpc state=stopped enabled=no

        - name: Set fact for removal of aci-integration-module package
          when: step|int == 2
          set_fact:
            remove_aci_integration_module: {get_param: UpgradeRemoveUnusedPackages}
        - name: Remove aci_integration_module package if operator requests it
          yum: name=aci-integration-module state=removed
          ignore_errors: True
          when:
            - step|int == 2
            - remove_aci_integration_module|bool

      metadata_settings:
        get_attr: [CiscoAciAim, role_data, metadata_settings]
      fast_forward_upgrade_tasks:
        - name: Remove neutron-ml2-driver-apic package
          yum: name=neutron-ml2-driver-apic state=removed
          ignore_errors: True
          when:
            - step|int == 0
            - release == 'ocata'
        - name: Check if aim is deployed
          command: systemctl is-enabled --quiet aim-aid
          ignore_errors: True
          register: aim_aid_enabled_result
          when:
            - step|int == 0
            - release == 'ocata'
        - name: Set fact aim_aid_enabled
          set_fact:
            aim_aid_enabled: "{{ aim_aid_enabled_result.rc == 0 }}"
          when:
            - step|int == 0
            - release == 'ocata'
        - name: Stop aim-aid
          service: name=aim-aid state=stopped enabled=no
          when:
            - step|int == 1
            - release == 'ocata'
            - aim_aid_enabled|bool
        - name: Stop aim-event-service-polling
          service: name=aim-event-service-polling state=stopped enabled=no
          when:
            - step|int == 1
            - release == 'ocata'
            - aim_aid_enabled|bool
        - name: Stop aim-event-service-rpc
          service: name=aim-event-service-rpc state=stopped enabled=no
          when:
            - step|int == 1
            - release == 'ocata'
            - aim_aid_enabled|bool

        - name: Neutron package update
          shell: yum -y update openstack-neutron*
          when:
            - step|int == 7
            - is_bootstrap_node|bool
        - name: Neutron package update workaround
          yum: name=python-networking-odl state=latest
          when:
            - step|int == 6
            - is_bootstrap_node|bool
        - name: Neutron db sync
          command: neutron-db-manage upgrade head
          when:
            - step|int == 8
            - is_bootstrap_node|bool

        - name: GBP package update
          shell: yum -y update openstack-neutron-gbp
          when:
            - step|int == 6
            - is_bootstrap_node|bool
        - name: AIM package update
          shell: yum -y update aci-integration-module apicapi
          when:
            - step|int == 6
            - is_bootstrap_node|bool
        - name: ciscoaci puppet package update
          shell: yum -y update ciscoaci-puppet
          when:
            - step|int == 6
        - name: gbp db upgrade
          command: /bin/gbp-db-manage --config-file /etc/neutron/neutron.conf upgrade head
          when:
            - step|int == 8
            - is_bootstrap_node|bool
        #- name: Aim db sync
        #  command: /usr/bin/aimctl db-migration upgrade head
        #  when:
        #    - step|int == 8
        #    - is_bootstrap_node|bool
