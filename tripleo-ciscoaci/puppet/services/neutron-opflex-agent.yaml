heat_template_version: queens

description: >
  OpenStack Neutron Opflex agent 

parameters:
  ServiceData:
    default: {}
    description: Dictionary packing service data
    type: json
  ServiceNetMap:
    default: {}
    description: Mapping of service_name -> network name. Typically set
                 via parameter_defaults in the resource registry.  This
                 mapping overrides those in ServiceNetMapDefaults.
    type: json
  DefaultPasswords:
    default: {}
    type: json
  RoleName:
    default: ''
    description: Role name on which the service is applied
    type: string
  RoleParameters:
    default: {}
    description: Parameters specific to the role
    type: json
  EndpointMap:
    default: {}
    description: Mapping of service endpoint -> protocol. Typically set
                 via parameter_defaults in the resource registry.
    type: json
  NeutronBridgeMappings:
    description: >
      The OVS logical->physical bridge mappings to use. See the Neutron
      documentation for details. Defaults to mapping br-ex - the external
      bridge on hosts - to a physical name 'datacentre' which can be used
      to create provider networks (and we use this for the default floating
      network) - if changing this either use different post-install network
      scripts or be sure to keep 'datacentre' as a mapping network name.
    type: comma_delimited_list
    default: "datacentre:br-ex"
  NeutronOVSFirewallDriver:
    default: 'neutron.agent.linux.iptables_firewall.OVSHybridIptablesFirewallDriver'
    description: |
      Configure the classname of the firewall driver to use for implementing
      security groups. Possible values depend on system configuration. Some
      examples are: noop, openvswitch, iptables_hybrid. The default value of an
      empty string will result in a default supported configuration.
    type: string

resources:

  NeutronBase:
    type: /usr/share/openstack-tripleo-heat-templates/puppet/services/neutron-base.yaml
    properties:
      ServiceData: {get_param: ServiceData}
      ServiceNetMap: {get_param: ServiceNetMap}
      DefaultPasswords: {get_param: DefaultPasswords}
      EndpointMap: {get_param: EndpointMap}
      RoleName: {get_param: RoleName}
      RoleParameters: {get_param: RoleParameters}

  Ovs:
    type: /usr/share/openstack-tripleo-heat-templates/puppet/services/openvswitch.yaml
    properties:
      ServiceNetMap: {get_param: ServiceNetMap}
      DefaultPasswords: {get_param: DefaultPasswords}
      EndpointMap: {get_param: EndpointMap}

  # Merging role-specific parameters (RoleParameters) with the default parameters.
  # RoleParameters will have the precedence over the default parameters.
  RoleParametersValue:
    type: OS::Heat::Value
    properties:
      type: json
      value:
        map_replace:
          - map_replace:
            - neutron::agents::ml2::ovs::bridge_mappings: NeutronBridgeMappings
              #vswitch::ovs::enable_hw_offload: OvsHwOffload
            - values: {get_param: [RoleParameters]}
          - values:
              NeutronBridgeMappings: {get_param: NeutronBridgeMappings}
              #OvsHwOffload: {get_param: OvsHwOffload}

outputs:
  role_data:
    description: Role data for the Neutron OVS agent service.
    value:
      service_name: neutron_opflex_agent
      ovs_upgrade_tasks: {get_attr: [Ovs, role_data, upgrade_tasks]}
      config_settings:
        map_merge:
          - get_attr: [NeutronBase, role_data, config_settings]
          - get_attr: [RoleParametersValue, value]
          - neutron::agents::ml2::ovs::local_ip: {get_param: [ServiceNetMap, NeutronTenantNetwork]}
            tripleo.opflex_agent.firewall_rules:
              '297 opflex vxlan networks':
                proto: 'udp'
                dport: 8472
              '298 opflex igmp accept':
                proto: 'igmp'
      step_config: |
        include ::tripleo::profile::base::ciscoaci_neutron_opflex
      upgrade_tasks:
        list_concat:
          - get_attr: [Ovs, role_data, upgrade_tasks]
          -
            - name: Check if neutron_ovs_agent is deployed
              command: systemctl is-enabled neutron-openvswitch-agent
              tags: common
              ignore_errors: True
              register: neutron_ovs_agent_enabled
            - name: "PreUpgrade step0,validation: Check service neutron-openvswitch-agent is running"
              shell: /usr/bin/systemctl show 'neutron-openvswitch-agent' --property ActiveState | grep '\bactive\b'
              when:
                - step|int == 0
                - neutron_ovs_agent_enabled.rc == 0
              tags: validation
            - name: Stop neutron_ovs_agent service
              when:
                - step|int == 1
                - neutron_ovs_agent_enabled.rc == 0
              service: name=neutron-openvswitch-agent state=stopped
      metadata_settings:
        get_attr: [NeutronBase, role_data, metadata_settings]
